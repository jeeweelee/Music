@page "/song/{id:guid}"
@using music_manager_starter.Shared
@using music_manager_starter.Shared.Response
@inject HttpClient Http
@inject NavigationManager Navigation


@code {
    [Parameter]
    public Guid id { get; set; }
    private Song? song;
    private double? averageRating;

    protected override async Task OnInitializedAsync()
    {
        try
        {

        song = await Http.GetFromJsonAsync<Song>($"api/songs/album/{id}");

        var response = await Http.GetFromJsonAsync<AverageRatingResponse>($"api/songrating/{id}/average");

        averageRating = response?.AverageRating;
        }

        catch (Exception ex)
        {
            Console.WriteLine($"Error loading song details or average rating: {ex.Message}");
        }

    }

    private string GetImageSource()
    {
        if (song?.Album?.CoverImage != null)
        {
            string base64Image = Convert.ToBase64String(song.Album.CoverImage);
            return $"data:image/jpeg;base64,{base64Image}";
        }
        return string.Empty;
    }


    private void NavigateToRateSong()
    {
        Navigation.NavigateTo($"/song/{id}/rate");
    }
}

<div class="p-0 min-h-screen bg-pattern flex flex-col items-center justify-center">
    @if (song != null)
    {
        <div class="glass p-8 border border-gray-300 rounded-lg text-white">
            <h2 class="text-3xl font-bold mb-4 text-center">@song.Title</h2>
            <p class="text-xl text-center">Artist: <span class="font-light">@song.Artist</span></p>
            <p class="text-md text-center">Album: <span class="font-light">@song.Album?.Name</span></p>
            <p class="text-md text-center">Genre: <span class="font-light">@song.Genre</span></p>
            <p class="text-md text-center">Release Date: <span class="font-light">@song.ReleaseDate?.ToString("MMMM dd, yyyy")</span></p>


            @if (averageRating.HasValue)
            {
                <p class="text-md text-center">Average Rating: <span class="font-light">@averageRating.Value</span></p>
            }
            else
            {
                <p class="text-md text-center text-gray-400">No ratings available yet.</p>
            }


            @if (!string.IsNullOrEmpty(GetImageSource()))
            {
                <img src="@GetImageSource()" alt="Album Art" class="w-64 h-64 mx-auto rounded-lg" />
            }
            else
            {
                <p class="text-center text-gray-400">No album art available.</p>
            }


            <button class="mt-4 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700"
                    @onclick="NavigateToRateSong">
                Rate Song
            </button>
        </div>
    }
    else
    {
        <div class="text-center text-gray-400">No details on this song</div>
    }
</div>


<style>
    .bg-pattern {
        background: linear-gradient(rgba(31, 41, 55, 0.7), rgba(31, 41, 55, 0.7)), url('dalle.webp');
        background-size: cover;
        background-position: center;
        font-family: 'Rajdhani', sans-serif;
    }


    .glass {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        border-radius: 10px;
        position: relative;
        overflow: hidden;
    }


    .glass:before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        border: 2px solid rgba(255, 255, 255, 0.2);
        border-radius: 10px;
        pointer-events: none;
    }

    button:hover {
        transform: scale(1.05);
        transition: transform 0.2s ease-in-out;
    }
</style>




