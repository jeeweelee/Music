@page "/AddSong"
@inject HttpClient Http
@using music_manager_starter.Shared
@inject NavigationManager Navigation

<div class="p-6">
    <h2 class="text-xl font-semibold text-white">Add New Song</h2>
    <EditForm Model="newSong" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-4">
            <label class="block text-gray-200">Title</label>
            <InputText @bind-Value="newSong.Title" class="mt-1 block w-full p-2 border rounded" />
        </div>

        <div class="mb-4">
            <label class="block text-gray-200">Artist</label>
            <InputText @bind-Value="newSong.Artist" class="mt-1 block w-full p-2 border rounded" />
        </div>

        <div class="mb-4">
            <label class="block text-gray-200">Genre</label>
            <InputText @bind-Value="newSong.Genre" class="mt-1 block w-full p-2 border rounded" />
        </div>

        <div class="mb-4">
            <label class="block text-gray-200">Release Date</label>
            <input type="date" @bind="newSong.ReleaseDate" class="mt-1 block w-full p-2 border rounded" />
        </div>

        <div class="mb-4">
            <label class="block text-gray-200">Album</label>
            <select @bind="newSong.AlbumId" class="mt-1 block w-full p-2 border rounded">
                <option value="">Select Album</option>
                @foreach (var album in albums)
                {
                    <option value="@album.Id">@album.Name</option>
                }
            </select>
        </div>
        <button type="submit" class="bg-purple-600 text-white px-4 py-2 rounded">Add Song</button>
    </EditForm>

</div>



@code {
    private Song newSong = new Song();
    private List<Album> albums = new List<Album>();
    

    protected override async Task OnInitializedAsync()
    {
        albums = await Http.GetFromJsonAsync<List<Album>>("api/album");
        if (albums == null || !albums.Any())
        {
            Console.WriteLine("No albums found.");
        }
    }

private async Task HandleValidSubmit()
{
    
var response = await Http.PostAsJsonAsync("api/songs", newSong);
if (response.IsSuccessStatusCode)
{   
    
    Navigation.NavigateTo("/");  
}
    Navigation.NavigateTo("/");  

    }
}